// server/server.js
import express from "express";
import cors from "cors";
import TelegramBot from "node-telegram-bot-api";
import cron from "node-cron";

const app = express();
app.use(cors());
app.use(express.json());

// üîë —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ Telegram-–±–æ—Ç–∞
const BOT_TOKEN = "8280337762:AAGNvUSZYh1Ap2p_Xwp5r3yCX4stL7T4qT4";

// —Å–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–∞ —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º polling
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// —Ö—Ä–∞–Ω–∏–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ—Ç–æ—Ä—ã—Ö –≤–∫–ª—é—á–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
let users = new Set();

/* ====================================
   –û–ë–†–ê–ë–û–¢–ß–ò–ö –ö–û–ú–ê–ù–î–´ /start
==================================== */
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(
    chatId,
    "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ ChinaOrderBot ‚Äî –æ—Ç–∫—Ä–æ–π –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –Ω–∞—á–Ω–∏ –æ–±—É—á–µ–Ω–∏–µ:",
    {
      reply_markup: {
        keyboard: [
          [
            {
              text: "–û—Ç–∫—Ä—ã—Ç—å ChinaOrderBot",
              web_app: { url: "https://—Ç–≤–æ–π-–¥–æ–º–µ–Ω/webapp" }, // ‚Üê –∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π URL
            },
          ],
        ],
        resize_keyboard: true,
      },
    }
  );
});

/* ====================================
   API –î–õ–Ø MINI-APP
==================================== */

// –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
app.post("/api/notifications/on", async (req, res) => {
  const { userId } = req.body;

  if (!userId) {
    return res
      .status(400)
      .json({ success: false, error: "–ù–µ –ø–µ—Ä–µ–¥–∞–Ω userId" });
  }

  users.add(userId);
  console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É
  try {
    await bot.sendMessage(
      userId,
      "‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã! –¢–µ–ø–µ—Ä—å —è –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è üòâ"
    );
  } catch (err) {
    console.warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é:", userId, err.message);
  }

  res.json({ success: true });
});

// –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
app.post("/api/notifications/off", async (req, res) => {
  const { userId } = req.body;

  if (!userId) {
    return res
      .status(400)
      .json({ success: false, error: "–ù–µ –ø–µ—Ä–µ–¥–∞–Ω userId" });
  }

  users.delete(userId);
  console.log(`üö´ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–´–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);

  try {
    await bot.sendMessage(userId, "üîï –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã.");
  } catch (err) {
    console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", err.message);
  }

  res.json({ success: true });
});

/* ====================================
   –¢–ï–°–¢–û–í–´–ï –£–í–ï–î–û–ú–õ–ï–ù–ò–Ø
==================================== */

// –ö–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É –±–æ—Ç —Ä–∞—Å—Å—ã–ª–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
cron.schedule("*/1 * * * *", async () => {
  console.log(`‚è∞ –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ${users.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...`);

  for (const id of users) {
    try {
      await bot.sendMessage(
        id,
        "üì¢ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç ChinaOrderBot: –Ω–µ –∑–∞–±—É–¥—å –ø—Ä–æ–π—Ç–∏ –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è!"
      );
    } catch (err) {
      console.warn("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:", id, err.message);
    }
  }
});

/* ====================================
   –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê
==================================== */
const PORT = process.env.PORT || 3001;

app.listen(PORT, "0.0.0.0", () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://0.0.0.0:${PORT}`);
});
