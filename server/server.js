// server/server.js
import express from "express";
import cors from "cors";
import TelegramBot from "node-telegram-bot-api";
import cron from "node-cron";

const app = express();
app.use(cors());
app.use(express.json());

// üîë —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
const BOT_TOKEN = "8280337762:AAGNvUSZYh1Ap2p_Xwp5r3yCX4stL7T4qT4";
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// üì¶ –•—Ä–∞–Ω–∏–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á—ë–Ω–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
let users = new Set();

/* =============================
   Telegram –ª–æ–≥–∏–∫–∞
============================= */

// –∫–æ–º–∞–Ω–¥–∞ /start
bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  const opts = {
    reply_markup: {
      keyboard: [
        [
          { text: "–û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", web_app: { url: "https://china-miniapp-5wr4qfh65-chllenns-projects.vercel.app" } }
        ],
        ["–û –ø—Ä–æ–µ–∫—Ç–µ"],
      ],
      resize_keyboard: true,
      one_time_keyboard: false,
    },
  };

  bot.sendMessage(
    chatId,
    "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ ChinaOrderBot ‚Äî –æ–±—É—á–∞—é—â–µ–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ –∑–∞–∫–∞–∑–∞–º –∏–∑ –ö–∏—Ç–∞—è.",
    opts
  );
});

// —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ ‚Äú–û –ø—Ä–æ–µ–∫—Ç–µ‚Äù
bot.on("message", (msg) => {
  if (msg.text === "–û –ø—Ä–æ–µ–∫—Ç–µ") {
    bot.sendMessage(
      msg.chat.id,
      "üì¶ ChinaOrderBot ‚Äî –æ–±—É—á–∞—é—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω–∞—É—á–∏—Ç —Ç–µ–±—è –∑–∞–∫–∞–∑—ã–≤–∞—Ç—å —Ç–æ–≤–∞—Ä—ã —Å AliExpress, 1688 –∏ Taobao."
    );
  }
});

/* =============================
   API –¥–ª—è –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
============================= */

app.post("/api/notifications/on", (req, res) => {
  const { userId } = req.body;
  if (!userId)
    return res.status(400).json({ success: false, error: "–ù–µ—Ç userId" });

  users.add(userId);
  console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  res.json({ success: true });
});

app.post("/api/notifications/off", (req, res) => {
  const { userId } = req.body;
  if (!userId)
    return res.status(400).json({ success: false, error: "–ù–µ—Ç userId" });

  users.delete(userId);
  console.log(`üö´ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–´–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  res.json({ success: true });
});

/* =============================
   –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
============================= */

cron.schedule("*/1 * * * *", async () => {
  console.log(`‚è∞ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ${users.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...`);
  for (const id of users) {
    try {
      await bot.sendMessage(id, "üì¢ –ü—Ä–∏–≤–µ—Ç –æ—Ç ChinaOrderBot! –ù–µ –∑–∞–±—É–¥—å —Å–µ–≥–æ–¥–Ω—è –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ üòâ");
    } catch (err) {
      console.warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", id, err.message);
    }
  }
});

/* =============================
   –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
============================= */
const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
