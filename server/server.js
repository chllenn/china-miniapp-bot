// server/server.js
import express from "express";
import cors from "cors";
import TelegramBot from "node-telegram-bot-api";
import cron from "node-cron";

const app = express();
app.use(cors());
app.use(express.json());

// üîë —Ç–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞
const BOT_TOKEN = "8280337762:AAGNvUSZYh1Ap2p_Xwp5r3yCX4stL7T4qT4";
const bot = new TelegramBot(BOT_TOKEN, { polling: true });

// üóÇÔ∏è –•—Ä–∞–Ω–∏–ª–∏—â–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –∫–æ–≥–æ –≤–∫–ª—é—á–µ–Ω—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
let users = new Set();

/* ================================
   TELEGRAM: –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –∫–Ω–æ–ø–∫–∏
================================= */

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;

  bot.sendMessage(chatId, "üëã –ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ ChinaOrderBot ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –∑–∞–∫–∞–∑–∞—Ö –∏–∑ –ö–∏—Ç–∞—è.", {
    reply_markup: {
      keyboard: [
        [
          {
            text: "üß≠ –û—Ç–∫—Ä—ã—Ç—å –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
            web_app: { url: "https://china-miniapp-bot.vercel.app" }, // ‚Üê —Å—é–¥–∞ –≤—Å—Ç–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ —Å–≤–æ—ë mini-app
          },
        ],
        [
          { text: "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ" },
        ],
      ],
      resize_keyboard: true,
      one_time_keyboard: false,
    },
  });
});

// –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ ¬´–û –ø—Ä–æ–µ–∫—Ç–µ¬ª
bot.on("message", (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;

  if (text === "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ") {
    bot.sendMessage(
      chatId,
      "üì¶ ChinaOrderBot ‚Äî —ç—Ç–æ –æ–±—É—á–∞—é—â–µ–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å –∑–∞–∫–∞–∑ —Ç–æ–≤–∞—Ä–æ–≤ —Å –∫–∏—Ç–∞–π—Å–∫–∏—Ö –ø–ª–æ—â–∞–¥–æ–∫ (1688, Taobao, Poizon –∏ –¥—Ä.).\n\nüöÄ –ù–∞—á–Ω–∏ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä—è–º–æ –≤ –º–∏–Ω–∏-–∞–ø–ø–µ!"
    );
  }
});

/* ================================
   API –¥–ª—è mini-app
================================= */

// –≤–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
app.post("/api/notifications/on", (req, res) => {
  const { userId } = req.body;
  if (!userId)
    return res.status(400).json({ success: false, error: "–ù–µ—Ç userId" });

  users.add(userId);
  console.log(`‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  res.json({ success: true });
});

// –≤—ã–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
app.post("/api/notifications/off", (req, res) => {
  const { userId } = req.body;
  if (!userId)
    return res.status(400).json({ success: false, error: "–ù–µ—Ç userId" });

  users.delete(userId);
  console.log(`üö´ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –í–´–ö–õ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
  res.json({ success: true });
});

/* ================================
   –†–∞—Å—Å—ã–ª–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
================================= */

// ‚è∞ –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É (–¥–ª—è —Ç–µ—Å—Ç–∞)
cron.schedule("*/1 * * * *", async () => {
  console.log(`‚è∞ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π ${users.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º...`);
  for (const id of users) {
    try {
      await bot.sendMessage(
        id,
        "üì¢ –ü—Ä–∏–≤–µ—Ç –æ—Ç ChinaOrderBot! –ù–µ –∑–∞–±—É–¥—å –ø—Ä–æ–π—Ç–∏ –æ–±—É—á–µ–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è üòâ"
      );
    } catch (err) {
      console.warn("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", id, err.message);
    }
  }
});

/* ================================
   –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
================================= */
const PORT = process.env.PORT || 3001;
app.listen(PORT, () => {
  console.log(`‚úÖ –°–µ—Ä–≤–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
});
